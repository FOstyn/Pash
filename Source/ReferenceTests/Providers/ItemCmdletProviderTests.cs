using NUnit.Framework;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using TestPSSnapIn;

namespace ReferenceTests.Providers
{   
    [TestFixture]
    public class ItemCmdletProviderTests : ReferenceTestBaseWithTestModule
    {
        private readonly string _fullDrivePrefix = TestItemProvider.ProviderName + "::" + TestItemProvider.DefaultDriveName + ":";

        [TestCase("foo:bar", true)]
        [TestCase("foo12", false)] // TestItemProvider only allows a-z, \, and :
        public void ItemProviderCanValidatePath(string path, bool valid)
        {
            var cmd = "Test-Path -IsValid '" + _fullDrivePrefix + ":" + path + "'";
            ExecuteAndCompareTypedResult(cmd, valid);
        }

        [Test]
        public void ItemProviderCanGetItem()
        {
            var cmd = "Get-Item -Path '" + _fullDrivePrefix + TestItemProvider.DefaultItemName + "'";
            ExecuteAndCompareTypedResult(cmd, TestItemProvider.DefaultItemValue);
        }

        [Test]
        public void ItemProviderCanClearItem()
        {
            var cmd = NewlineJoin(
                "Clear-Item -Path '" + _fullDrivePrefix + TestItemProvider.DefaultItemName + "'",
                "Get-Item -Path '" + _fullDrivePrefix + TestItemProvider.DefaultItemName + "'"
            );
            ExecuteAndCompareTypedResult(cmd, new object[0]); // no output
        }

        [Test]
        public void ItemProviderCanSetItem()
        {
            var cmd = "Set-Item -Path '" + _fullDrivePrefix + "foo' -Value 'bar' -PassThru";
            ExecuteAndCompareTypedResult(cmd, "bar");
        }

        [Test]
        public void ItemProviderCanInvokeItem()
        {
            // if an item is invoked, it's simply copied. I.e. it's set with the ":DEFAULT" prefix and "true" as value
            var cmd = "Invoke-Item -Path '" + _fullDrivePrefix + TestItemProvider.DefaultItemName + "'";
            ExecuteAndCompareTypedResult(cmd, "invoked!"); // generated by the InvokeItem function
        }

        [Test]
        public void ItemProviderCanGetMultipleItems()
        {
            var cmd = NewlineJoin(
                "Set-Item -Path '" + _fullDrivePrefix + "foo' -Value 'bar'",
                "Get-Item -Path '" + _fullDrivePrefix + "*'"
            );
            ExecuteAndCompareTypedResult(cmd, TestItemProvider.DefaultItemValue, "bar");
        }

    }
}
